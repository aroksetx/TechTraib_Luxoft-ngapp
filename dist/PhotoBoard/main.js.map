{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/file-uploader/file-uploader.component.css","webpack:///./src/app/file-uploader/file-uploader.component.html","webpack:///./src/app/file-uploader/file-uploader.component.ts","webpack:///./src/app/image-galary/image-galary.component.css","webpack:///./src/app/image-galary/image-galary.component.html","webpack:///./src/app/image-galary/image-galary.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/services/authorization/authorization.service.ts","webpack:///./src/app/services/data-base-connector/data-base-connector.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".footer {\\n  width: 100%;\\n  height: 150px;\\n}\\n\\n.f-app-container {\\n  display: flex;\\n  flex-flow: row wrap;\\n  height: 100%;\\n}\\n\\n.f-app-container > * {\\n  padding: 10px;\\n  flex: 1 100%;\\n}\\n\\n.f-content {\\n  background-color: #f7fafa;\\n  flex-grow: 1;\\n}\\n\\n.f-footer {\\n  background-color: bisque;\\n  flex-grow: 1;\\n  flex-shrink: 1;\\n  flex-basis: auto;\\n  text-align: center;\\n  background-color: #fff;\\n}\\n\\n.f-footer > img {\\n  margin-top: 40px;\\n}\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <mat-toolbar-row>\\n    <div>\\n      <div>\\n        <app-login [authData]=\\\"authData\\\" style=\\\"float: right\\\"></app-login>\\n      </div>\\n    </div>\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n\\n\\n<div class=\\\"f-app-container\\\">\\n  <div class=\\\"f-content\\\">\\n      <div *ngIf=\\\"userUID\\\">\\n          <app-file-uploader [userName]=\\\"userName\\\" [userUID]=\\\"userUID\\\"></app-file-uploader>\\n        </div>\\n        <app-image-galary [userUID]=\\\"userUID\\\"></app-image-galary>\\n  </div>\\n  <div class=\\\"f-footer\\\">\\n      <img [src]=\\\"'https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=' + baseURL\\\" alt=\\\"\\\">\\n      <p>Scan to open app!</p>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {User} from 'firebase';\nimport {AuthorizationService} from './services/authorization/authorization.service';\nimport {PlatformLocation} from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'Tech train demo app.';\n  authData = null;\n  userUID = null;\n  userName = null;\n  baseURL = null;\n\n  constructor(private auth: AuthorizationService,\n              private plLocation: PlatformLocation) {\n    this.baseURL = this.getBaseUrl();\n  }\n\n  ngOnInit(): void {\n    this.authData = this.auth.getAuthData();\n    this.authData.user\n      .subscribe((user: User) => {\n        user ? this.userUID = user.uid : this.userUID = null;\n        user ? this.userName = user.displayName : this.userName = null;\n      });\n  }\n\n  private getBaseUrl(): string {\n    return (this.plLocation as any).location.origin;\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoginComponent } from './login/login.component';\nimport { AngularFireModule } from 'angularfire2';\nimport { environment } from '../environments/environment';\nimport { AngularFireStorageModule } from 'angularfire2/storage';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatGridListModule,\n  MatProgressSpinnerModule,\n  MatToolbarModule\n} from '@angular/material';\nimport { ImageGalaryComponent } from './image-galary/image-galary.component';\nimport { FileUploaderComponent } from './file-uploader/file-uploader.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ImageGalaryComponent,\n    FileUploaderComponent\n  ],\n  imports: [\n    AngularFireModule.initializeApp(environment.firebase),\n    BrowserModule,\n    BrowserAnimationsModule,\n    AngularFirestoreModule, // imports firebase/firestore, only needed for database features\n    AngularFireAuthModule, // imports firebase/auth, only needed for auth features,\n    AngularFireStorageModule, // imports firebase/storage only needed for storage features,\n    MatToolbarModule,\n    MatGridListModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatProgressSpinnerModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \".upload-container {\\n  background-color: #fff;\\n  padding: 10px;\\n  box-shadow: 1px 1px 10px #efe7e7;\\n}\\n\"","module.exports = \"<div class=\\\"upload-container\\\">\\n  <p>Upload center:</p>\\n  <div class=\\\"fu-contaier\\\">\\n    <div class=\\\"fu-controls\\\">\\n      <label for=\\\"public\\\">Make public: </label>\\n      <input id=\\\"public\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"isPublic\\\">\\n      <input type=\\\"file\\\" accept=\\\"image/*\\\" (change)=\\\"uploadFile($event)\\\">\\n    </div>\\n    <div class=\\\"fu-progress\\\">\\n      <mat-spinner *ngIf=\\\"showSpinner\\\" [value]=\\\"processStatus | async\\\" [mode]=\\\"'determinate'\\\"></mat-spinner>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, Input, OnInit } from '@angular/core';\nimport { AngularFireStorage } from 'angularfire2/storage';\nimport { DataBaseConnectorService } from '../services/data-base-connector/data-base-connector.service';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/internal/operators';\n\n@Component({\n  selector: 'app-file-uploader',\n  templateUrl: './file-uploader.component.html',\n  styleUrls: ['./file-uploader.component.css']\n})\nexport class FileUploaderComponent {\n  @Input()\n  userUID = null;\n  @Input()\n  userName = null;\n  isPublic = false;\n  processStatus: Observable<number>;\n  showSpinner = false;\n\n  constructor(\n    private storage: AngularFireStorage,\n    private db: DataBaseConnectorService\n  ) {}\n\n  uploadFile(event) {\n    this.showSpinner = true;\n    const file = event.target.files[0];\n    const filePath = `${\n      this.isPublic ? 'public' : this.userUID\n    }/${new Date().getTime() + file.name}`;\n    const fileRef = this.storage.ref(filePath);\n    const uploadTask = this.storage.upload(filePath, file);\n    this.processStatus = uploadTask.percentageChanges();\n\n    uploadTask\n      .snapshotChanges()\n      .pipe(\n        finalize(() =>\n          fileRef.getDownloadURL().subscribe(url => {\n            this.addUserFile(file.name, url);\n            this.showSpinner = false;\n            this.isPublic = false;\n          })\n        )\n      )\n      .subscribe();\n  }\n\n  addUserFile(fileName: string, url: string) {\n    if (!this.isPublic && this.userUID) {\n      this.db\n        .getCollection(this.userUID)\n        .add({ fileName: fileName, path: url, user: this.userName });\n    } else {\n      this.db\n        .getCollection('public')\n        .add({ fileName: fileName, path: url, user: this.userName });\n      this.db\n        .getCollection(this.userUID)\n        .add({ fileName: fileName, path: url, user: this.userName });\n    }\n  }\n}\n","module.exports = \".bart {\\n  background-image: url('bart.png');\\n  background-size: contain;\\n  height: 240px;\\n  background-repeat: no-repeat;\\n  background-position: center;\\n  margin-top: 50px;\\n}\\n\\n.message {\\n  text-align: center;\\n  padding-top: 20px;\\n}\\n\\n.photo-comment {\\n  position: absolute;\\n  bottom: 0;\\n  background-color: #f5f3f3b5;\\n  width: 100%;\\n  text-align: left;\\n  padding: 5px;\\n  font-size: 12px;\\n  padding-left: 20px;\\n}\\n\"","module.exports = \"<div>\\n  <div *ngIf=\\\"!userUID ; else showGallery\\\">\\n    <h3>Public photo board</h3>\\n  </div>\\n  <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"2:1\\\">\\n    <mat-grid-tile\\n      *ngFor=\\\"let image of imageList | async\\\">\\n      <a [href]=\\\"image.path\\\" target=\\\"_blank\\\" ><img [src]=\\\"image.path\\\" width=\\\"100%\\\"></a>\\n      <div *ngIf=\\\"!userUID\\\" class=\\\"photo-comment\\\">\\n        <span>From:</span> {{image.user}}\\n      </div>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n</div>\\n\\n<ng-template #showGallery>\\n  <div>\\n    <h4>Your photos:</h4>\\n  </div>\\n</ng-template>\\n\"","import {Component, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\nimport {AngularFireStorage} from 'angularfire2/storage';\nimport {DataBaseConnectorService} from '../services/data-base-connector/data-base-connector.service';\nimport {Observable} from 'rxjs';\n\n@Component({\n  selector: 'app-image-galary',\n  templateUrl: './image-galary.component.html',\n  styleUrls: ['./image-galary.component.css']\n})\nexport class ImageGalaryComponent implements OnInit, OnChanges {\n  @Input() userUID;\n  imageList: Observable<any>;\n\n  constructor(private db: DataBaseConnectorService,\n              private storage: AngularFireStorage) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.userUID) {\n      if (this.userUID) {\n        this.imageList = this.db.getCollection(this.userUID).valueChanges();\n      } else {\n        this.imageList = this.db.getCollection('public').valueChanges();\n      }\n    }\n  }\n\n\n\n}\n","module.exports = \".login-container {\\n  display: flex;\\n  flex-direction: row;\\n  height: 40px;\\n}\\n\\n.avatar {\\n  padding-left: 10px;\\n  padding-right: 10px;\\n}\\n\\n.user-info {\\n  padding-right: 10px;\\n  display: contents;\\n}\\n\\n.action-bt {\\n  order: 1;\\n  flex-grow: 1;\\n  position: absolute;\\n  right: 10px;\\n}\\n\"","module.exports = \"<div class=\\\"login-container\\\" *ngIf=\\\"authData.user | async as user; else showLogin\\\">\\n  <div class=\\\"user-info\\\">\\n    <h1>Hello {{ user.displayName }}!</h1>\\n    <div class=\\\"avatar\\\">\\n      <img [src]=\\\"user.photoURL\\\" width=\\\"30\\\" [alt]=\\\"user.displayName\\\">\\n    </div>\\n  </div>\\n  <button class=\\\"action-bt\\\" mat-raised-button (click)=\\\"logout()\\\">Logout</button>\\n</div>\\n<ng-template #showLogin>\\n  <span>Login in Photoßoard!</span>\\n  <button class=\\\"action-bt\\\" mat-raised-button (click)=\\\"login()\\\">Login</button>\\n</ng-template>\\n\"","import {Component, Input} from '@angular/core';\nimport {AuthorizationService} from '../services/authorization/authorization.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  @Input() authData;\n\n  constructor(private auth: AuthorizationService) {\n  }\n\n  login() {\n    this.auth.loginGoogle();\n  }\n\n  logout() {\n    this.auth.logout();\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {AngularFireAuth} from 'angularfire2/auth';\nimport {auth} from 'firebase';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorizationService {\n\n  constructor(private afAuth: AngularFireAuth) {\n  }\n\n  loginGoogle() {\n    this.afAuth.auth.signInWithPopup(new auth.GoogleAuthProvider());\n\n  }\n\n  logout() {\n    this.afAuth.auth.signOut();\n  }\n\n  getAuthData(): AngularFireAuth {\n    return this.afAuth;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {AngularFirestore, AngularFirestoreCollection} from 'angularfire2/firestore';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataBaseConnectorService {\n\n  constructor(private db: AngularFirestore) { }\n\n  getCollection(collection: string): AngularFirestoreCollection<any> {\n    return this.db.collection(collection);\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyCFwDGG1c1LNgfKqrqGFaup0E9-dCz7of8',\n    authDomain: 'techtrainconf.firebaseapp.com',\n    databaseURL: 'https://techtrainconf.firebaseio.com',\n    projectId: 'techtrainconf',\n    storageBucket: 'techtrainconf.appspot.com',\n    messagingSenderId: '914894061378'\n  }\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}